#Get List of Protocols
ls()

#Different configuration options
conf

IP().show()

ls(IP)

#Sniff on an interface and read 3 packets
pkts = sniff(iface='eth0',count=3)

#First Packet
pkts[0]

#Get the details of the packet in a structured format 
pkts[0].show()

#Get summary of the pkt
pkts[0].summary()

#Hexdumping a packet
hexdump(pkts[0])

#Applying filters
pkts = sniff(iface="eth0",filter="icmp",count=3)

#Lamda
pkts = sniff(iface="eth0",filter="icmp",count=3,prn=lambda x: x.summary())pkts = sniff(iface="eth0",filter="icmp",count=3,prn=lambda x: x.summary())

#Write to packet to a pcap file
wrpcap("demo.cap",pkts)

#Read from cap
rdpcap("demo.cap")

#Export packet as base64 encoded
export_object(str(pkts[0]))

#Import packet from base64
newPkt = import_object()

#Export packet as string
str(pkts[0])

#import packet from string
FishHeader e.g. Ether(pkt_string)

#Layer 2 send spoofed packets

sendp(Ehter()/IP(dst="google.com")/ICMP()/"XXX",iface="eth1",loop=1,inter=1

Layer 3 
- sr()
- sr1()

srp1(Ether()/IP(dst="google.com")/ICMP()/"XXX")

Layer 2 
- srp()
- srp1()

sr(IP(dst="google.com"),timeout=5)srp1()

sr(IP(dst="google.com"),timeout=5)

pkt = Ether(dst="ff:ff:ff:ff:ff:ff")/ARP(pdst=ip,hwdst="ff:ff:ff:ff:ff:ff")
pkt = Ether(dst="ff:ff:ff:ff:ff:ff")/ARP(pdst=ip,hwdst="ff:ff:ff:ff:ff:ff")

